{"ast":null,"code":"var _jsxFileName = \"/Users/danielgutkin/Documents/Education/Computer Science/MIT xPRO/Modules/Module 13/build-a-formik-form_starter/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// // TODO: import useFormik from formik library\n// import {useFormik} from 'formik';\n\n// function App() {\n//   // TODO: add a const called formik assigned to useFormik()\n//   const formik = useFormik({\n//     initialValues: {\n//       email: '',\n//       password: ''\n//     },\n//     onSubmit: values => {\n//       console.log(values);\n//       // alert('Login Successful');\n//     },\n//     validate: values => {\n//       let errors = {};\n//       if (!values.email) errors.email = 'Field required';\n//       const regex=/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n//       if (!regex.test(values.email)) errors.email = 'Username should be an email';\n//       if (!values.password) errors.password = 'Field required';\n//       return errors;\n//     }\n//   });\n\n//   return (\n//     <div className=\"form-container\">\n\n//       <h1>My Formik Form</h1>\n//       <form onSubmit={formik.handleSubmit}>\n\n//         <label>Email:</label>\n//         <input type=\"text\" id=\"emailField\" onChange={formik.handleChange} value={formik.values.email}/>\n//         {formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\n\n//         <label>Password:</label>\n//         <input type=\"text\" onChange={formik.handleChange} value={formik.values.password}/>\n//         {formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\n\n//         <button type=\"submit\">Submit</button>\n\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log(\"submit\");\n      alert('Login Successful');\n    },\n    validate: values => {\n      let errors = {\n        email: '',\n        password: ''\n      };\n      if (!values.email) errors.email = 'Field required';\n      const regex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if (!regex.test(values.email)) errors.email = 'Username should be an email';\n      if (!values.password) errors.password = 'Field required';\n      console.log(JSON.stringify(errors));\n      return errors;\n    }\n  });\n  return (\n    /*#__PURE__*/\n    // <div className=\"form-container\">\n    // <h1>My Formik Form</h1>\n    _jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailField\",\n        name: \"email\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 30\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pswField\",\n        name: \"password\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","email","password","onSubmit","values","console","log","alert","validate","errors","regex","test","JSON","stringify","handleSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","type","onChange","handleChange","value","style","color","_c","$RefreshReg$"],"sources":["/Users/danielgutkin/Documents/Education/Computer Science/MIT xPRO/Modules/Module 13/build-a-formik-form_starter/src/App.js"],"sourcesContent":["// import React from 'react';\n// // TODO: import useFormik from formik library\n// import {useFormik} from 'formik';\n\n// function App() {\n//   // TODO: add a const called formik assigned to useFormik()\n//   const formik = useFormik({\n//     initialValues: {\n//       email: '',\n//       password: ''\n//     },\n//     onSubmit: values => {\n//       console.log(values);\n//       // alert('Login Successful');\n//     },\n//     validate: values => {\n//       let errors = {};\n//       if (!values.email) errors.email = 'Field required';\n//       const regex=/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n//       if (!regex.test(values.email)) errors.email = 'Username should be an email';\n//       if (!values.password) errors.password = 'Field required';\n//       return errors;\n//     }\n//   });\n\n//   return (\n//     <div className=\"form-container\">\n      \n//       <h1>My Formik Form</h1>\n//       <form onSubmit={formik.handleSubmit}>\n        \n//         <label>Email:</label>\n//         <input type=\"text\" id=\"emailField\" onChange={formik.handleChange} value={formik.values.email}/>\n//         {formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\n\n//         <label>Password:</label>\n//         <input type=\"text\" onChange={formik.handleChange} value={formik.values.password}/>\n//         {formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\n\n//         <button type=\"submit\">Submit</button>\n\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport { useFormik } from 'formik';\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: values => {\n      console.log(\"submit\");\n      alert('Login Successful');\n    },\n    validate: values => {\n      let errors = {\n        email: '',\n        password: '',\n      };\n      if (!values.email) errors.email = 'Field required';\n      const regex=/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if (!regex.test(values.email)) errors.email = 'Username should be an email';\n      if (!values.password) errors.password = 'Field required';\n      console.log(JSON.stringify(errors));\n      return errors;\n    }\n  });\n\n  return (\n    \n    // <div className=\"form-container\">\n    // <h1>My Formik Form</h1>\n    <form onSubmit={formik.handleSubmit}>\n\n      <label htmlFor=\"email\">Email Address</label>\n      <input\n        id=\"emailField\"\n        name=\"email\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.email}\n      />\n      {formik.errors.email ? <div id=\"emailError\" style={{color: 'red'}}>{formik.errors.email}</div> : null}\n      \n      <label htmlFor=\"password\">Password</label>\n      <input\n        id=\"pswField\"\n        name=\"password\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.password}\n      />\n      {formik.errors.password ? <div id=\"pswError\" style={{color: 'red'}}>{formik.errors.password}</div> : null}\n\n      <button type=\"submit\">Submit</button>\n    </form>\n    \n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}