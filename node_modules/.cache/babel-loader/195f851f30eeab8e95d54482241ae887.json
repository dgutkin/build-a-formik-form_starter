{"ast":null,"code":"var _jsxFileName = \"/Users/danielgutkin/Documents/Education/Computer Science/MIT xPRO/Modules/Module 13/build-a-formik-form_starter/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// // TODO: import useFormik from formik library\n// import {useFormik} from 'formik';\n\n// function App() {\n//   // TODO: add a const called formik assigned to useFormik()\n//   const formik = useFormik({\n//     initialValues: {\n//       email: '',\n//       password: ''\n//     },\n//     onSubmit: values => {\n//       console.log(values);\n//       // alert('Login Successful');\n//     },\n//     validate: values => {\n//       let errors = {};\n//       if (!values.email) errors.email = 'Field required';\n//       const regex=/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n//       if (!regex.test(values.email)) errors.email = 'Username should be an email';\n//       if (!values.password) errors.password = 'Field required';\n//       return errors;\n//     }\n//   });\n\n//   return (\n//     <div className=\"form-container\">\n\n//       <h1>My Formik Form</h1>\n//       <form onSubmit={formik.handleSubmit}>\n\n//         <label>Email:</label>\n//         <input type=\"text\" id=\"emailField\" onChange={formik.handleChange} value={formik.values.email}/>\n//         {formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\n\n//         <label>Password:</label>\n//         <input type=\"text\" onChange={formik.handleChange} value={formik.values.password}/>\n//         {formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\n\n//         <button type=\"submit\">Submit</button>\n\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      alert('Login Successful');\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) errors.email = 'Field required';\n      const regex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if (!regex.test(values.email)) errors.email = 'Username should be an email';\n      if (!values.password) errors.password = 'Field required';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"emailField\",\n      name: \"email\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"pswField\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"submitBtn\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","email","password","onSubmit","values","alert","validate","errors","regex","test","handleSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","type","onChange","handleChange","value","lastName","_c","$RefreshReg$"],"sources":["/Users/danielgutkin/Documents/Education/Computer Science/MIT xPRO/Modules/Module 13/build-a-formik-form_starter/src/App.js"],"sourcesContent":["// import React from 'react';\n// // TODO: import useFormik from formik library\n// import {useFormik} from 'formik';\n\n// function App() {\n//   // TODO: add a const called formik assigned to useFormik()\n//   const formik = useFormik({\n//     initialValues: {\n//       email: '',\n//       password: ''\n//     },\n//     onSubmit: values => {\n//       console.log(values);\n//       // alert('Login Successful');\n//     },\n//     validate: values => {\n//       let errors = {};\n//       if (!values.email) errors.email = 'Field required';\n//       const regex=/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n//       if (!regex.test(values.email)) errors.email = 'Username should be an email';\n//       if (!values.password) errors.password = 'Field required';\n//       return errors;\n//     }\n//   });\n\n//   return (\n//     <div className=\"form-container\">\n      \n//       <h1>My Formik Form</h1>\n//       <form onSubmit={formik.handleSubmit}>\n        \n//         <label>Email:</label>\n//         <input type=\"text\" id=\"emailField\" onChange={formik.handleChange} value={formik.values.email}/>\n//         {formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\n\n//         <label>Password:</label>\n//         <input type=\"text\" onChange={formik.handleChange} value={formik.values.password}/>\n//         {formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\n\n//         <button type=\"submit\">Submit</button>\n\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport { useFormik } from 'formik';\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: values => {\n      alert('Login Successful');\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) errors.email = 'Field required';\n      const regex=/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if (!regex.test(values.email)) errors.email = 'Username should be an email';\n      if (!values.password) errors.password = 'Field required';\n      return errors;\n    }\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"email\">Email Address</label>\n      <input\n        id=\"emailField\"\n        name=\"email\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.email}\n      />\n      <label htmlFor=\"lastName\">Password</label>\n      <input\n        id=\"pswField\"\n        name=\"lastName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.lastName}\n      />\n      \n      <button id=\"submitBtn\" type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGL,SAAS,CAAC;IACvBM,aAAa,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAEC,MAAM,IAAI;MAClBC,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC;IACDC,QAAQ,EAAEF,MAAM,IAAI;MAClB,IAAIG,MAAM,GAAG,CAAC,CAAC;MACf,IAAI,CAACH,MAAM,CAACH,KAAK,EAAEM,MAAM,CAACN,KAAK,GAAG,gBAAgB;MAClD,MAAMO,KAAK,GAAC,sEAAsE;MAClF,IAAI,CAACA,KAAK,CAACC,IAAI,CAACL,MAAM,CAACH,KAAK,CAAC,EAAEM,MAAM,CAACN,KAAK,GAAG,6BAA6B;MAC3E,IAAI,CAACG,MAAM,CAACF,QAAQ,EAAEK,MAAM,CAACL,QAAQ,GAAG,gBAAgB;MACxD,OAAOK,MAAM;IACf;EACF,CAAC,CAAC;EACF,oBACEX,OAAA;IAAMO,QAAQ,EAAEJ,MAAM,CAACW,YAAa;IAAAC,QAAA,gBAClCf,OAAA;MAAOgB,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5CpB,OAAA;MACEqB,EAAE,EAAC,YAAY;MACfC,IAAI,EAAC,OAAO;MACZC,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAErB,MAAM,CAACsB,YAAa;MAC9BC,KAAK,EAAEvB,MAAM,CAACK,MAAM,CAACH;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFpB,OAAA;MAAOgB,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1CpB,OAAA;MACEqB,EAAE,EAAC,UAAU;MACbC,IAAI,EAAC,UAAU;MACfC,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAErB,MAAM,CAACsB,YAAa;MAC9BC,KAAK,EAAEvB,MAAM,CAACK,MAAM,CAACmB;IAAS;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eAEFpB,OAAA;MAAQqB,EAAE,EAAC,WAAW;MAACE,IAAI,EAAC,QAAQ;MAAAR,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEX;AAAClB,EAAA,CAxCQD,GAAG;EAAA,QACKH,SAAS;AAAA;AAAA8B,EAAA,GADjB3B,GAAG;AAwCX;AAED,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}